#
#	WAGON 1
#

traffic_trailer : train_car.et_wagon1
{
	accessories[]: .et_wagon1.chassis
	accessories[]: .et_wagon1.rwheel
	accessories[]: .et_wagon1.rwheel1
	accessories[]: .et_wagon1.rwheel2
	accessories[]: .et_wagon1.rwheel3

	sound_move: "/sound/traffic/train_car_cargo.soundref"

	displacement_limit: 0.0
	
	tags[]: eurotunnel

	spawn_condition[]: .train_car.et_wagon1.condition.area

}

vehicle_accessory: .et_wagon1.chassis
{
	data_path: "/def/vehicle/ai/promods/rail/euro_tunnel/chassis_wagon1.sii"
}

vehicle_wheel_accessory: .et_wagon1.rwheel
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon1.rwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon1.rwheel2
{
	offset: 4
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon1.rwheel3
{
	offset: 6
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

traffic_spawn_condition: .train_car.et_wagon1.condition.area
{
    # spawn only near city with specified name
    type: area
    str_param[]: "eurotunnel"
}

#
#	WAGON 2
#

traffic_trailer : train_car.et_wagon2
{
	accessories[]: .et_wagon2.chassis
	accessories[]: .et_wagon2.rwheel
	accessories[]: .et_wagon2.rwheel1
	accessories[]: .et_wagon2.rwheel2
	accessories[]: .et_wagon2.rwheel3

	sound_move: "/sound/traffic/train_car_cargo.soundref"

	displacement_limit: 0.0
	
	tags[]: eurotunnel

	spawn_condition[]: .train_car.et_wagon2.condition.area

}

vehicle_accessory: .et_wagon2.chassis
{
	data_path: "/def/vehicle/ai/promods/rail/euro_tunnel/chassis_wagon2.sii"
}

vehicle_wheel_accessory: .et_wagon2.rwheel
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon2.rwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon2.rwheel2
{
	offset: 4
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon2.rwheel3
{
	offset: 6
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

traffic_spawn_condition: .train_car.et_wagon2.condition.area
{
    # spawn only near city with specified name
    type: area
    str_param[]: "eurotunnel"
}

#
#	WAGON 3
#

traffic_trailer : train_car.et_wagon3
{
	accessories[]: .et_wagon3.chassis
	accessories[]: .et_wagon3.rwheel
	accessories[]: .et_wagon3.rwheel1
	accessories[]: .et_wagon3.rwheel2
	accessories[]: .et_wagon3.rwheel3

	sound_move: "/sound/traffic/train_car_cargo.soundref"

	displacement_limit: 0.0
	
	tags[]: eurotunnel

	spawn_condition[]: .train_car.et_wagon3.condition.area

}

vehicle_accessory: .et_wagon3.chassis
{
	data_path: "/def/vehicle/ai/promods/rail/euro_tunnel/chassis_wagon3.sii"
}

vehicle_wheel_accessory: .et_wagon3.rwheel
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon3.rwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon3.rwheel2
{
	offset: 4
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon3.rwheel3
{
	offset: 6
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

traffic_spawn_condition: .train_car.et_wagon3.condition.area
{
    # spawn only near city with specified name
    type: area
    str_param[]: "eurotunnel"
}

#
#	WAGON 4
#

traffic_trailer : train_car.et_wagon4
{
	accessories[]: .et_wagon4.chassis
	accessories[]: .et_wagon4.rwheel
	accessories[]: .et_wagon4.rwheel1
	accessories[]: .et_wagon4.rwheel2
	accessories[]: .et_wagon4.rwheel3

	sound_move: "/sound/traffic/train_car_cargo.soundref"

	displacement_limit: 0.0
	
	tags[]: eurotunnel

	spawn_condition[]: .train_car.et_wagon4.condition.area

}

vehicle_accessory: .et_wagon4.chassis
{
	data_path: "/def/vehicle/ai/promods/rail/euro_tunnel/chassis_wagon4.sii"
}

vehicle_wheel_accessory: .et_wagon4.rwheel
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon4.rwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon4.rwheel2
{
	offset: 4
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon4.rwheel3
{
	offset: 6
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

traffic_spawn_condition: .train_car.et_wagon4.condition.area
{
    # spawn only near city with specified name
    type: area
    str_param[]: "eurotunnel"
}

#
#	WAGON 5
#

traffic_trailer : train_car.et_wagon5
{
	accessories[]: .et_wagon5.chassis
	accessories[]: .et_wagon5.rwheel
	accessories[]: .et_wagon5.rwheel1
	accessories[]: .et_wagon5.rwheel2
	accessories[]: .et_wagon5.rwheel3

	sound_move: "/sound/traffic/train_car_cargo.soundref"

	displacement_limit: 0.0
	
	tags[]: eurotunnel

	spawn_condition[]: .train_car.et_wagon5.condition.area

}

vehicle_accessory: .et_wagon5.chassis
{
	data_path: "/def/vehicle/ai/promods/rail/euro_tunnel/chassis_wagon5.sii"
}

vehicle_wheel_accessory: .et_wagon5.rwheel
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon5.rwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon5.rwheel2
{
	offset: 4
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_wagon5.rwheel3
{
	offset: 6
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

traffic_spawn_condition: .train_car.et_wagon5.condition.area
{
    # spawn only near city with specified name
    type: area
    str_param[]: "eurotunnel"
}

#
#	REAR LOCO
#

traffic_trailer : train_car.et_loco_rear
{
	accessories[]: .et_loco_rear.chassis
	accessories[]: .et_loco_rear.rwheel
	accessories[]: .et_loco_rear.rwheel1
	accessories[]: .et_loco_rear.rwheel2
	accessories[]: .et_loco_rear.rwheel3

	sound_move: "/sound/traffic/train_electric_1.soundref"

	displacement_limit: 0.0
	
	tags[]: eurotunnel

	spawn_condition[]: .traffic.et_loco_rear.condition.area

}

vehicle_accessory: .et_loco_rear.chassis
{
	data_path: "/def/vehicle/ai/promods/rail/euro_tunnel/chassis_loco_rear.sii"
}

vehicle_wheel_accessory: .et_loco_rear.rwheel
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_loco_rear.rwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_loco_rear.rwheel2
{
	offset: 4
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

vehicle_wheel_accessory: .et_loco_rear.rwheel3
{
	offset: 6
	data_path: "/def/vehicle/ai_wheel/train_cars.sii"
}

traffic_spawn_condition: .traffic.et_loco_rear.condition.area
{
    # spawn only near city with specified name
    type: area
    str_param[]: "eurotunnel"
}
