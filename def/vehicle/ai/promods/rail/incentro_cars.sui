#
#	CARRIAGE 0
#

traffic_trailer : train_car.incentro.first
{
	accessories[]: .incentro.first.tchassis
	accessories[]: .incentro.first.trwheel0
	accessories[]: .incentro.first.trwheel1
	
	displacement_limit: 0.0

	sound_move: "/sound/traffic/tram_1.soundref"
	
	prefer_variant: true
	variant[]: train_car.incentro.first.brest
	variant[]: train_car.incentro.first.clermont
	variant[]: train_car.incentro.first.nantes
	variant[]: train_car.incentro.first.toulouse
	variant[]: train_car.incentro.first.orleans
	variant[]: train_car.incentro.first.poznan
}
vehicle_accessory: .incentro.first.tchassis
{
	data_path: "/def/vehicle/ai/incentro/chassis_car1.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel0
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}


traffic_trailer : train_car.incentro.first.brest
{
	accessories[]: .incentro.first.tchassis.brest
	accessories[]: .incentro.first.trwheel0.brest
	accessories[]: .incentro.first.trwheel1.brest
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.first.brest.condition.city
}
vehicle_accessory: .incentro.first.tchassis.brest
{
	data_path: "/def/vehicle/ai/incentro/chassis_car1_brest.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel0.brest
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel1.brest
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.first.brest.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "brest"
}


traffic_trailer : train_car.incentro.first.clermont
{
	accessories[]: .incentro.first.tchassis.clermont
	accessories[]: .incentro.first.trwheel0.clermont
	accessories[]: .incentro.first.trwheel1.clermont
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.first.clermont.condition.city
}
vehicle_accessory: .incentro.first.tchassis.clermont
{
	data_path: "/def/vehicle/ai/incentro/chassis_car1_clermont.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel0.clermont
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel1.clermont
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.first.clermont.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "clermont"
}


traffic_trailer : train_car.incentro.first.nantes
{
	accessories[]: .incentro.first.tchassis.nantes
	accessories[]: .incentro.first.trwheel0.nantes
	accessories[]: .incentro.first.trwheel1.nantes
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.first.nantes.condition.city
}
vehicle_accessory: .incentro.first.tchassis.nantes
{
	data_path: "/def/vehicle/ai/incentro/chassis_car1_nantes.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel0.nantes
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel1.nantes
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.first.nantes.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "nantes"
}


traffic_trailer : train_car.incentro.first.orleans
{
	accessories[]: .incentro.first.tchassis.orleans
	accessories[]: .incentro.first.trwheel0.orleans
	accessories[]: .incentro.first.trwheel1.orleans
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.first.orleans.condition.city
}
vehicle_accessory: .incentro.first.tchassis.orleans
{
	data_path: "/def/vehicle/ai/incentro/chassis_car1_orleans.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel0.orleans
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel1.orleans
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.first.orleans.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "orleans"
}


traffic_trailer : train_car.incentro.first.toulouse
{
	accessories[]: .incentro.first.tchassis.toulouse
	accessories[]: .incentro.first.trwheel0.toulouse
	accessories[]: .incentro.first.trwheel1.toulouse
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.first.toulouse.condition.city
}
vehicle_accessory: .incentro.first.tchassis.toulouse
{
	data_path: "/def/vehicle/ai/incentro/chassis_car1_toulouse.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel0.toulouse
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel1.toulouse
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.first.toulouse.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "toulouse"
}

traffic_trailer : train_car.incentro.first.poznan
{
	accessories[]: .incentro.first.tchassis.poznan
	accessories[]: .incentro.first.trwheel0.poznan
	accessories[]: .incentro.first.trwheel1.poznan
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.first.poznan.condition.city
}
vehicle_accessory: .incentro.first.tchassis.poznan
{
	data_path: "/def/vehicle/ai/promods/rail/incentro/chassis_car1_poznan.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel0.poznan
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.first.trwheel1.poznan
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.first.poznan.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "poznan"
}

#
#	CARRIAGE 1
#

traffic_trailer : train_car.incentro.second
{
	accessories[]: .incentro.second.tchassis
	accessories[]: .incentro.second.trwheel0
	accessories[]: .incentro.second.trwheel1
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	prefer_variant: true
	variant[]: train_car.incentro.second.brest
	variant[]: train_car.incentro.second.clermont
	variant[]: train_car.incentro.second.nantes
	variant[]: train_car.incentro.second.toulouse
	variant[]: train_car.incentro.second.orleans
	variant[]: train_car.incentro.second.poznan
}
vehicle_accessory: .incentro.second.tchassis
{
	data_path: "/def/vehicle/ai/incentro/chassis_car2.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel0
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel1
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}


traffic_trailer : train_car.incentro.second.brest
{
	accessories[]: .incentro.second.tchassis.brest
	accessories[]: .incentro.second.trwheel0.brest
	accessories[]: .incentro.second.trwheel1.brest
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.second.brest.condition.city
}
vehicle_accessory: .incentro.second.tchassis.brest
{
	data_path: "/def/vehicle/ai/incentro/chassis_car2_brest.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel0.brest
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel1.brest
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.second.brest.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "brest"
}


traffic_trailer : train_car.incentro.second.clermont
{
	accessories[]: .incentro.second.tchassis.clermont
	accessories[]: .incentro.second.trwheel0.clermont
	accessories[]: .incentro.second.trwheel1.clermont
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.second.clermont.condition.city
}
vehicle_accessory: .incentro.second.tchassis.clermont
{
	data_path: "/def/vehicle/ai/incentro/chassis_car2_clermont.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel0.clermont
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel1.clermont
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.second.clermont.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "clermont"
}


traffic_trailer : train_car.incentro.second.nantes
{
	accessories[]: .incentro.second.tchassis.nantes
	accessories[]: .incentro.second.trwheel0.nantes
	accessories[]: .incentro.second.trwheel1.nantes
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.second.nantes.condition.city
}
vehicle_accessory: .incentro.second.tchassis.nantes
{
	data_path: "/def/vehicle/ai/incentro/chassis_car2_nantes.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel0.nantes
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel1.nantes
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.second.nantes.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "nantes"
}


traffic_trailer : train_car.incentro.second.orleans
{
	accessories[]: .incentro.second.tchassis.orleans
	accessories[]: .incentro.second.trwheel0.orleans
	accessories[]: .incentro.second.trwheel1.orleans
	
	sound_move: "/sound/traffic/tram_1.soundref"

	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.second.orleans.condition.city
}
vehicle_accessory: .incentro.second.tchassis.orleans
{
	data_path: "/def/vehicle/ai/incentro/chassis_car2_orleans.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel0.orleans
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel1.orleans
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.second.orleans.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "orleans"
}


traffic_trailer : train_car.incentro.second.toulouse
{
	accessories[]: .incentro.second.tchassis.toulouse
	accessories[]: .incentro.second.trwheel0.toulouse
	accessories[]: .incentro.second.trwheel1.toulouse

	sound_move: "/sound/traffic/tram_1.soundref"
	
	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.second.toulouse.condition.city
}
vehicle_accessory: .incentro.second.tchassis.toulouse
{
	data_path: "/def/vehicle/ai/incentro/chassis_car2_toulouse.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel0.toulouse
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel1.toulouse
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.second.toulouse.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "toulouse"
}

traffic_trailer : train_car.incentro.second.poznan
{
	accessories[]: .incentro.second.tchassis.poznan
	accessories[]: .incentro.second.trwheel0.poznan
	accessories[]: .incentro.second.trwheel1.poznan

	sound_move: "/sound/traffic/tram_1.soundref"
	
	displacement_limit: 0.0

	spawn_condition[]: .train_car.incentro.second.poznan.condition.city
}
vehicle_accessory: .incentro.second.tchassis.poznan
{
	data_path: "/def/vehicle/ai/promods/rail/incentro/chassis_car2_poznan.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel0.poznan
{
	offset: 0
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
vehicle_wheel_accessory: .incentro.second.trwheel1.poznan
{
	offset: 2
	data_path: "/def/vehicle/ai_wheel/incentro_rear.sii"
}
traffic_spawn_condition: .train_car.incentro.second.poznan.condition.city
{
	# spawn only near city with specified name
	type: city
	str_param[]: "poznan"
}
